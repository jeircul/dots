---

- name: Setup Fedora Workstation with Qtile
  hosts: localhost
  connection: local
  # become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_user_id: jeircul
    public_repo: https://github.com/jeircul/dots
    private_repo: https://github.com/jeircul/dotfiles
    req_software:
      - zsh
      - alacritty
      - tmux
      - nnn
      - neovim
      - gh
      - rofi
      - fzf
      - qutebrowser
      - ripgrep
      - picom
      - dunst
      - neofetch
      - zathura
      - zathura-plugins-all
      - flameshot
      - sxiv
      - fd-find
      - git-delta
      - nodejs
      - python3-pip
      - gcc
      - gcc-c++
      - cargo
      - go
      - ruby
      - luarocks
      - php
      - java
      - julia

  tasks:
    - name: Improve DNF Performance
      ansible.builtin.blockinfile:
        path: /etc/dnf/dnf.conf
        create: yes
        block: |
          deltarpm=true
          fastestmirror=true
          max_parallel_downloads={{ ansible_processor_vcpus }}
      become: yes

    - name: Upgrade all packages
      ansible.builtin.dnf:
        name: "*"
        state: latest
      become: yes

    - name: Autoremove after update
      ansible.builtin.dnf:
        autoremove: yes
      become: yes

    - name: Install required software
      ansible.builtin.dnf:
        name: "{{ req_software }}"
        state: latest
      become: yes

    - name: Install pip software
      ansible.builtin.pip:
        name: 
          - pynvim
          - tmuxp
          - pywal
          - tldextract

    - name: Install npm neovim
      ansible.builtin.npm:
        name: neovim
        global: true
      become: true

    - name: Install npm bitwarden
      ansible.builtin.npm:
        name: "@bitwarden/cli"
        global: true
      become: true

    - name: Set zsh as default shell
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: /bin/zsh
      become: true

    - name: Clone dotbare
      ansible.builtin.git:
        repo: https://github.com/kazhala/dotbare.git
        dest: /home/{{ ansible_user_id }}/git/dotbare
        accept_newhostkey: yes

    - name: Dotbare finit for integrating public dots
      ansible.builtin.command: /home/{{ ansible_user_id }}/git/dotbare/dotbare finit -u {{ public_repo }} -y
      args:
        creates: ~/.cfg

    - name: create wal cache
      ansible.builtin.shell:
        cmd: |
          wal --theme /home/{{ ansible_user_id }}/.config/wal/colorschemes/dark/tokyo-night.json -b 000000
        creates: /home/{{ ansible_user_id }}/.cache/wal/colors

    - name: Enable Fedora Copr for Qtile
      community.general.copr:
        name: frostyx/qtile
      become: yes

    - name: Enable Fedora Copr for Lazygit
      community.general.copr:
        name: atim/lazygit
      become: yes

    - name: Upgrade all packages
      ansible.builtin.dnf:
        name: "*"
        state: latest
      become: yes

    - name: Install Qtile and Lazygit software
      ansible.builtin.dnf:
        name:
          - qtile
          - qtile-extras
          - lazygit
        state: latest
      become: yes

    - name: Clone keyd
      ansible.builtin.git:
        repo: https://github.com/rvaiya/keyd.git
        dest: /home/{{ ansible_user_id }}/git/keyd
        accept_newhostkey: yes

    - name: Make and install keyd
      ansible.builtin.shell:
        cmd: |
          cd /home/{{ ansible_user_id }}/git/keyd
          make && sudo make install
        creates: /usr/bin/keyd
      become: true

    - name: Enable keyd
      ansible.builtin.systemd:
        name: keyd.service
        state: started
        enabled: true
      become: true

    - name: Create keyd config
      ansible.builtin.blockinfile:
        path: /etc/keyd/keyd.conf
        block: |
          [ids]

          *

          [main]

          # Maps capslock to escape when pressed and control when held.
          capslock = overload(control, esc)
        create: true
      become: true

    - name: Clone qutebrowser
      ansible.builtin.git:
        repo: https://github.com/qutebrowser/qutebrowser.git
        dest: /home/{{ ansible_user_id }}/git/qutebrowser
        accept_newhostkey: yes

    - name: Copy userscripts for qutebrowser
      ansible.builtin.copy:
        src: /home/{{ ansible_user_id }}/git/qutebrowser/misc/userscripts
        dest: /home/{{ ansible_user_id }}/.config/qutebrowser/
        mode: u+rwx

    - name: Test if gh-cli is logged in
      ansible.builtin.shell:
        cmd: gh auth token
      register: token
      ignore_errors: true
      failed_when: false
      changed_when: false

    - name: Implement private dotfiles with Dotbare (need gh login)
      ansible.builtin.shell:
        cmd: |
          export DOTBARE_TREE="$HOME"
          export DOTBARE_DIR="$HOME/.pcfg"
          export DOTBARE_BACKUP="$HOME/.local/share/dotbare/pcfg"
          /home/{{ ansible_user_id }}/git/dotbare/dotbare finit -u {{ private_repo }} -y
      args:
        creates: ~/.pcfg
      when: token.stderr != "no oauth token"

    - name: Clone scripts
      ansible.builtin.git:
        repo: https://github.com/{{ ansible_user_id }}/scripts.git
        dest: /home/{{ ansible_user_id }}/scripts
        accept_newhostkey: yes
      when: token.stderr != "no oauth token"

    - name: Inform if gh-cli is not logged in
      ansible.builtin.debug:
        msg: "Please login to gh-cli with `gh auth login`, and rerun the script"
      when: token.stderr == "no oauth token"
